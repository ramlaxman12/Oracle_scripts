###################from oracle support##############################################

dba_tab_statistics,dba_tab_col_statistics

execute dbms_stats.gather_table_stats(ownname => 'MULDMS', tabname => 'GM_ECLR', estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE, method_opt => 'FOR ALL COLUMNS SIZE AUTO', cascade => TRUE);
 
execute dbms_stats.gather_table_stats(ownname => 'MULDMS', tabname => 'SH_INVOICE', estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE, method_opt => 'FOR ALL COLUMNS SIZE AUTO'); 

execute dbms_stats.gather_table_stats(ownname => 'MULDMS', tabname => 'GM_VAR', estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE, method_opt => 'FOR ALL COLUMNS SIZE AUTO', cascade => TRUE); 


########################################################################################

— create table to backup statistics, ownname is statistics table owner and stattab is statistics table name
 SQL> execute dbms_stats.create_stat_table(ownname= 'scott', stattab= 'backup_stats');

PL/SQL procedure successfully completed.

— procedure to export statistics, exports statistics scott.test into scott.backup_stats, cascade=>true means it will export index statistics too
 SQL> exec dbms_stats.export_table_stats(ownname=>'scott', tabname=>'test', statown=>'scott', stattab=>'backup_stats', cascade=>true);

PL/SQL procedure successfully completed.

— import table stats
 SQL> exec dbms_stats.import_table_stats(ownname=>'scott', tabname=>'test1', statown=>'scott', stattab=>'backup_stats', cascade=>true);

PL/SQL procedure successfully completed.

— drop statistics table
 SQL> execute dbms_stats.drop_stat_table(ownname= 'scott', stattab= 'backup_stats');
